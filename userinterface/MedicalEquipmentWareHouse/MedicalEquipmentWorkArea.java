/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MedicalEquipmentWareHouse;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.EquipmentHandlingOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MedicalEquipmentWorkRequest;
import Business.WorkQueue.OperationsWorkRequest;
import Business.WorkQueue.TransportationWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author family
 */
public class MedicalEquipmentWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form MedicalEquipmentWorkArea
     */
    
   private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private Organization organization;
    private Network network;
    private Enterprise enterprise;
    private Organization transportOrganization;
    public MedicalEquipmentWorkArea(JPanel userProcessContainer,EcoSystem business,UserAccount userAccount,Organization organization,Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.business = business;
        this.organization = organization;
        this.network=network;
        populateMedicalEquipmentRequestTable();
        //populateTransportWorkRequest();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicalequipmentJTable = new javax.swing.JTable();
        processRequestBtn = new javax.swing.JButton();
        assigntoMebtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 153));
        setPreferredSize(new java.awt.Dimension(2000, 1200));

        jButton2.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 24)); // NOI18N
        jButton2.setText("REFRESH");

        medicalequipmentJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "EQUIPMENT NAME", "URGENCY LEVEL", "QUANTITY", "SENDER", "RECIEVER", "REQUEST SENT Y/N"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(medicalequipmentJTable);

        processRequestBtn.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 24)); // NOI18N
        processRequestBtn.setText("PROCESS REQUEST>>>");
        processRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processRequestBtnActionPerformed(evt);
            }
        });

        assigntoMebtn.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 24)); // NOI18N
        assigntoMebtn.setText("ASSIGN TO ME");
        assigntoMebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assigntoMebtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setText("REQUESTS FROM HOSPITALS ");

        backBtn.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 24)); // NOI18N
        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 24)); // NOI18N
        jButton1.setText("VIEW REQUEST STATUS>>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(594, 594, 594))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(backBtn)
                                    .addGap(339, 339, 339)
                                    .addComponent(assigntoMebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(processRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(314, 314, 314))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(assigntoMebtn)
                    .addComponent(processRequestBtn))
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addContainerGap(495, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assigntoMebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assigntoMebtnActionPerformed
        // TODO add your handling code here:
        
          int selectedRow = medicalequipmentJTable.getSelectedRow();
        
        if (selectedRow < 0){
           JOptionPane.showMessageDialog(null, "Please select a row!");
        }
        
        MedicalEquipmentWorkRequest request = (MedicalEquipmentWorkRequest)medicalequipmentJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        request.setTransportrequestStatus("N");
        
        populateMedicalEquipmentRequestTable();
        
                   
    }//GEN-LAST:event_assigntoMebtnActionPerformed

    private void processRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processRequestBtnActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = medicalequipmentJTable.getSelectedRow();
        
        if (selectedRow < 0){
             JOptionPane.showMessageDialog(null,"Please select a row");
            return;
        }
        
        MedicalEquipmentWorkRequest request = (MedicalEquipmentWorkRequest)medicalequipmentJTable.getValueAt(selectedRow, 0);
       // String result="Request sent to transport department for delivery"?"Request sent to transport department for delivery":request.setExpectedArivalTime(request.getMessage());
        request.setStatus("Request sent to transport department for delivery");
        
       
        TransportationWorkRequest transportrequest=new TransportationWorkRequest();
        transportrequest=new TransportationWorkRequest();
        transportrequest.setSender(userAccount);
        transportrequest.setStatus("Sent");
        transportrequest.setHospitalName(request.getHospitalName());
        transportrequest.setEquipmentinfo(("Name: "+request.getEquipmentName())+","+ "Qauntity: " +( request.getQuantity()));
        transportrequest.setUrgency(request.getUrgencyLevel());
        request.setExpectedArivalTime(request.getMessage());
        request.setTransportrequestStatus("Y");
        
        //userAccount.getWorkQueue().getWorkRequestList().add(transportrequest);
         if(network.getName().equals(this.network.getName())){
            for(Enterprise enterprise :network.getEnterpriseDirectory().getEnterpriseList() ){
                System.out.println("****" +enterprise.getName());
                System.out.println("******"+enterprise.getEnterpriseType());
                //if(enterprise.getEnterpriseType().equals("MedicalEquipmentWareHouse")){
                //  Enterprise.EnterpriseType type=null;
                    //if(enterprise.getEnterpriseType().equals("MedicalEquipmentWareHouse")){
                  //if (type==Enterprise.EnterpriseType.MedicalEquipmentWareHouse) { 
                  for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList()){
                      System.out.println("***** Organization Name:" +organization.getName());
                   if(organization.getName().equals("Transportation Organization")){
                      System.out.println("True");
                   // for( Organization organization :enterprise.getOrganizationDirectory().getOrganizationList()){
                        System.out.println("***** organization Name"+organization.getName());
                       // if(organization.getName().equals("EquipmentOrganization")){
                        // organization.getWorkQueue().getWorkRequestList().add(transportrequest);
                         
                      JOptionPane.showMessageDialog(null, "Transport department has been notified! "
                              + "The request id is : "+transportrequest.getUniqueId());
                      int requestId=transportrequest.getUniqueId();
                      System.out.println("***" +requestId);
                      transportrequest.setRequestId(requestId);
                      userAccount.getWorkQueue().getWorkRequestList().add(transportrequest);
                       organization.getWorkQueue().getWorkRequestList().add(transportrequest);
                      
                   }  
                        
                   }
                   }
                  
         CardLayout layout = (CardLayout) userProcessContainer.getLayout();
          userProcessContainer.add("ProcessRequest", new ViewTransportationRequestJPanel(userProcessContainer,userAccount));//userProcessContainer,userAccount,organization,enterprise,system,network));
         layout.next(userProcessContainer);
        
         }
        else{
          CardLayout layout = (CardLayout) userProcessContainer.getLayout();
          userProcessContainer.add("ProcessRequest", new ViewTransportationRequestJPanel(userProcessContainer,userAccount));//userProcessContainer,userAccount,organization,enterprise,system,network));
         layout.next(userProcessContainer);
         
        }
       // populateTransportWorkRequest();
    }//GEN-LAST:event_processRequestBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
         userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("ProcessRequest", new ViewTransportationRequestJPanel(userProcessContainer,userAccount));//userProcessContainer,userAccount,organization,enterprise,system,network));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed
 
    public void populateMedicalEquipmentRequestTable(){
        
        DefaultTableModel model = (DefaultTableModel)medicalequipmentJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : organization.getWorkQueue().getWorkRequestList()){
         //   if(request instanceof OperationsWorkRequest){
            Object[] row = new Object[6];
             
            //row[0] = request.getMessage();
//            System.out.println("*******" +name);
            row[0]=((MedicalEquipmentWorkRequest) request);
            String urgencyLevel = ((MedicalEquipmentWorkRequest) request).getUrgencyLevel();
            int quantity = ((MedicalEquipmentWorkRequest) request).getQuantity();
            row[1] = urgencyLevel;
            row[2]=quantity;
            row[3]=request.getSender();
            
            row[4]=request.getReceiver();
            
            model.addRow(row);
        }
        //}
        
        
        
        
    }
    
    public void populateTransportWorkRequest(){
        DefaultTableModel model = (DefaultTableModel)medicalequipmentJTable.getModel();
        
        model.setRowCount(0);
        Object row[]=new Object[4];
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            row[0]=((TransportationWorkRequest)request);
            row[1]=request.getReceiver();
            row[2]=request.getStatus();
            row[3]=((TransportationWorkRequest)request).getTime();
        }
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assigntoMebtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medicalequipmentJTable;
    private javax.swing.JButton processRequestBtn;
    // End of variables declaration//GEN-END:variables
}
